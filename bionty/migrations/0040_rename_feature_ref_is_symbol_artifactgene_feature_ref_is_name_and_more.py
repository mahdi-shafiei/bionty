# Generated by Django 5.1.1 on 2024-10-18 14:17

from django.db import connection, migrations


def remove_duplicate_entries(apps, schema_editor) -> None:
    """Removes duplicate entries from ArtifactCellType table, keeping only one record
    for each unique combination of artifact_id, celltype_id, and feature_id.
    """
    import bionty as bt

    # SQL to identify and keep only one record from each group of duplicates
    sql = """
    WITH duplicates AS (
        SELECT id,
               ROW_NUMBER() OVER (
                   PARTITION BY artifact_id, celltype_id, feature_id
                   ORDER BY id
               ) as row_num
        FROM bionty_artifactcelltype
    )
    DELETE FROM bionty_artifactcelltype
    WHERE id IN (
        SELECT id
        FROM duplicates
        WHERE row_num > 1
    );
    """

    # Get count before deletion
    count_before = bt.CellType.artifacts.through.objects.count()

    # Execute the SQL
    with connection.cursor() as cursor:
        cursor.execute(sql)

    # Get count after deletion
    count_after = bt.CellType.artifacts.through.objects.count()

    # Return number of deleted records
    print(
        "ArtifactCellType links",
        {
            "records_before": count_before,
            "records_after": count_after,
            "duplicates_removed": count_before - count_after,
        },
    )


class Migration(migrations.Migration):
    dependencies = [
        ("bionty", "0039_alter_cellline_source_alter_cellmarker_source_and_more"),
        ("lnschema_core", "0067_alter_featurevalue_unique_together_and_more"),
    ]

    operations = [
        migrations.RenameField(
            model_name="artifactgene",
            old_name="feature_ref_is_symbol",
            new_name="feature_ref_is_name",
        ),
        migrations.RenameField(
            model_name="artifactgene",
            old_name="gene_ref_is_symbol",
            new_name="label_ref_is_name",
        ),
        migrations.RunPython(remove_duplicate_entries),
        migrations.AlterUniqueTogether(
            name="artifactcellline",
            unique_together={("artifact", "cellline", "feature")},
        ),
        migrations.AlterUniqueTogether(
            name="artifactcellmarker",
            unique_together={("artifact", "cellmarker", "feature")},
        ),
        migrations.AlterUniqueTogether(
            name="artifactcelltype",
            unique_together={("artifact", "celltype", "feature")},
        ),
        migrations.AlterUniqueTogether(
            name="artifactdevelopmentalstage",
            unique_together={("artifact", "developmentalstage", "feature")},
        ),
        migrations.AlterUniqueTogether(
            name="artifactdisease",
            unique_together={("artifact", "disease", "feature")},
        ),
        migrations.AlterUniqueTogether(
            name="artifactethnicity",
            unique_together={("artifact", "ethnicity", "feature")},
        ),
        migrations.AlterUniqueTogether(
            name="artifactexperimentalfactor",
            unique_together={("artifact", "experimentalfactor", "feature")},
        ),
        migrations.AlterUniqueTogether(
            name="artifactgene",
            unique_together={("artifact", "gene", "feature")},
        ),
        migrations.AlterUniqueTogether(
            name="artifactorganism",
            unique_together={("artifact", "organism", "feature")},
        ),
        migrations.AlterUniqueTogether(
            name="artifactpathway",
            unique_together={("artifact", "pathway", "feature")},
        ),
        migrations.AlterUniqueTogether(
            name="artifactphenotype",
            unique_together={("artifact", "phenotype", "feature")},
        ),
        migrations.AlterUniqueTogether(
            name="artifactprotein",
            unique_together={("artifact", "protein", "feature")},
        ),
        migrations.AlterUniqueTogether(
            name="artifacttissue",
            unique_together={("artifact", "tissue", "feature")},
        ),
        migrations.AlterUniqueTogether(
            name="featuresetcellmarker",
            unique_together={("featureset", "cellmarker")},
        ),
        migrations.AlterUniqueTogether(
            name="featuresetgene",
            unique_together={("featureset", "gene")},
        ),
        migrations.AlterUniqueTogether(
            name="featuresetpathway",
            unique_together={("featureset", "pathway")},
        ),
        migrations.AlterUniqueTogether(
            name="featuresetprotein",
            unique_together={("featureset", "protein")},
        ),
    ]
